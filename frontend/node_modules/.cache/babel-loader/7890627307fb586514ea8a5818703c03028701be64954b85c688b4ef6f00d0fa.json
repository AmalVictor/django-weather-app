{"ast":null,"code":"import axios from 'axios';\n// Create axios instance with base URL\nconst API = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  withCredentials: true // needed for Django CSRF protection\n});\n\n// Add request interceptor for authentication\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Weather API\nexport const getWeather = async city => {\n  const response = await API.get(`/weather/?city=${city}`);\n  return response.data;\n};\n\n// Authentication API\nexport const login = async (username, password) => {\n  const response = await API.post('/auth/login/', {\n    username,\n    password\n  });\n  return response.data;\n};\nexport const register = async (username, email, password) => {\n  const response = await API.post('/auth/register/', {\n    username,\n    email,\n    password\n  });\n  return response.data;\n};\nexport const logout = async () => {\n  const response = await API.post('/auth/logout/');\n  return response.data;\n};\nexport const getCurrentUser = async () => {\n  const response = await API.get('/auth/user/');\n  return response.data;\n};\n\n// Search History API\nexport const getSearchHistory = async () => {\n  const response = await API.get('/history/');\n  return response.data;\n};","map":{"version":3,"names":["axios","API","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","getWeather","city","response","get","data","login","username","password","post","register","email","logout","getCurrentUser","getSearchHistory"],"sources":["C:/weather_dashboard/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { WeatherData, SearchHistoryItem, User } from '../types';\r\n\r\n// Create axios instance with base URL\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:8000/api',\r\n  withCredentials: true // needed for Django CSRF protection\r\n});\r\n\r\n// Add request interceptor for authentication\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Token ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Weather API\r\nexport const getWeather = async (city: string): Promise<WeatherData> => {\r\n  const response = await API.get(`/weather/?city=${city}`);\r\n  return response.data;\r\n};\r\n\r\n// Authentication API\r\nexport const login = async (username: string, password: string) => {\r\n  const response = await API.post('/auth/login/', { username, password });\r\n  return response.data;\r\n};\r\n\r\nexport const register = async (username: string, email: string, password: string) => {\r\n  const response = await API.post('/auth/register/', { username, email, password });\r\n  return response.data;\r\n};\r\n\r\nexport const logout = async () => {\r\n  const response = await API.post('/auth/logout/');\r\n  return response.data;\r\n};\r\n\r\nexport const getCurrentUser = async (): Promise<User> => {\r\n  const response = await API.get('/auth/user/');\r\n  return response.data;\r\n};\r\n\r\n// Search History API\r\nexport const getSearchHistory = async (): Promise<SearchHistoryItem[]> => {\r\n  const response = await API.get('/history/');\r\n  return response.data;\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE,IAAI,CAAC;AACxB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,SAASJ,KAAK,EAAE;EACjD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAOC,IAAY,IAA2B;EACtE,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,kBAAkBF,IAAI,EAAE,CAAC;EACxD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;EACjE,MAAML,QAAQ,GAAG,MAAMlB,GAAG,CAACwB,IAAI,CAAC,cAAc,EAAE;IAAEF,QAAQ;IAAEC;EAAS,CAAC,CAAC;EACvE,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAG,MAAAA,CAAOH,QAAgB,EAAEI,KAAa,EAAEH,QAAgB,KAAK;EACnF,MAAML,QAAQ,GAAG,MAAMlB,GAAG,CAACwB,IAAI,CAAC,iBAAiB,EAAE;IAAEF,QAAQ;IAAEI,KAAK;IAAEH;EAAS,CAAC,CAAC;EACjF,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMT,QAAQ,GAAG,MAAMlB,GAAG,CAACwB,IAAI,CAAC,eAAe,CAAC;EAChD,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAA2B;EACvD,MAAMV,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,aAAa,CAAC;EAC7C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAA0C;EACxE,MAAMX,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,WAAW,CAAC;EAC3C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}